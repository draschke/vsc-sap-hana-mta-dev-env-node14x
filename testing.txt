yo base-mta-module --mtaFilePath=/workspaces/vscode-sap-hana-dev-env-for-running-hana-cli/mta.yaml --defaultName=ui5
yo @sap/base-mta-module --mtaFilePath=/workspaces/vscode-sap-hana-dev-env-for-running-hana-cli/mta1.yaml --defaultName=ui5


// "startAll": "npm install --prefix /workspaces/vsc-sap-hana-mta-dev-env-node10x/t3e && npm audit fix --prefix /workspaces/vsc-sap-hana-mta-dev-env-node10x/t3e && npm install --prefix /workspaces/vsc-sap-hana-mta-dev-env-node10x/t3e/db && npm install --prefix /workspaces/vsc-sap-hana-mta-dev-env-node10x/t3e/js && npm start --prefix /workspaces/vsc-sap-hana-mta-dev-env-node10x/t3e/js && npm audit fix --prefix /workspaces/vsc-sap-hana-mta-dev-env-node10x/t3e/js && npm install --prefix /workspaces/vsc-sap-hana-mta-dev-env-node10x/t3e/web &&  npm start --prefix /workspaces/vsc-sap-hana-mta-dev-env-node10x/t3e/db"

npm install -g mta

$ yo
May we anonymously report usage statistics to improve the tool over time? 
-->  No 
Easy Ui5 
  generator-ui5-project https://github.com/ui5-community/generator-ui5-project/
   What do you want to do? Create a new OpenUI5/SAPUI5 project

   com.myorg.myUI5App
   com.myorg.myUI5App/db

   yo @sap/base-mta-module --mtaFilePath=/workspaces/com.myorg.myUI5App/db.yaml --defaultName=ui5

   Wizard (F1)
   Open Template Wizard
- creates a HDB module

https://code.visualstudio.com/docs/containers/choosing-dev-environment#_development-container
   RUN  && apt-get update -y \
    &&  apt-transport-https \
    && ca-certificates \
    && curl \
    && gnupg \
    && lsb-release \
    && apt-get install -y docker-ce-cli \
    && apt-get install -y python python-pip \
    && pip install docker-compose \    
    
    && curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \


     echo \
  "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

$ sudo -i
root ➜ ~ $ su node
node

  generator-ui5-project https://github.com/ui5-community/generator-ui5-project/
npm start

https://github.com/yongzhihuang/PentaCode/blob/7498ce9a1e8b943bf77e9472b7ba5be5390ce599/staticBoilerplateWithNPM/package.json#L6

  "scripts": {
    "build-css": "node-sass --include-path scss scss/main.scss build/css/style.min.css",
    "build-js": "browserify js/**.js > build/js/script.min.js",
    "build": "npm run build-css && npm run build-js",
    "server": "cd build && python -m SimpleHTTPServer 8000",
    "start": "nodemon -e js,scss -x \"npm run build && npm run server\" --ignore build/"
  },


    sudo apt-get update

    sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg


    echo   "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update

sudo apt-get -y install docker-ce docker-ce-cli containerd.io


npm list -g --depth=0
node ➜ /workspaces/vsc-sap-hana-mta-dev-env-node14x (main ✗) $ npm list -g --depth=0
/usr/local/share/npm-global/lib
├── @sap/cds-dk@4.4.1
├── eslint@7.32.0
├── mta@1.0.1
└── typescript@4.3.5

node ➜ /workspaces/vsc-sap-hana-mta-dev-env-node14x (main ✗) $ npm list -g --depth=0
/usr/local/share/npm-global/lib
├── @sap/cds-dk@4.4.1
├── @sap/generator-base-mta-module@1.3.7
├── @sap/generator-fiori@1.3.0
├── eslint@7.32.0
├── generator-easy-ui5@3.0.1
├── mta@1.0.1
├── typescript@4.3.5
└── yo@4.3.0

# Install Docker --> E: Unable to locate package containerd
RUN  apt-get -y update \
    && apt-get -y install curl \
    && apt-get -y install apt-transport-https \
    && apt-get -y install ca-certificates \
    && apt-get -y install gnupg \
    && apt-get -y install lsb-release 
    
 RUN  apt-get -y update \
    && apt-get remove docker docker-engine docker.io containerd runc \
    && curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
    echo   "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get -y update \
    && apt-get -y install docker-ce-cli
    # sudo apt install docker-ce    


    export NVM_DIR="$HOME/.nvm"

https://gdevops.gitlab.io/tuto_javascript/installation/nvm/nvm.html
    export NVM_DIR="${XDG_CONFIG_HOME/:-$HOME/.}nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm


RUN sudo -u ${USERNAME}  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \
    && export NVM_DIR=~/.nvm \
    && source ~/.nvm/nvm.sh \
# RUN sudo -u ${USERNAME} export NVM_DIR="$HOME/.nvm"; \
    # && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" \
    # && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  \
    # && echo "[[ -s $NVM_DIR/nvm.sh ]] && . $NVM_DIR/nvm.sh" >> $HOME/.bashrc; \
    # && echo "[[  -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
    && nvm install --lts --latest-npm